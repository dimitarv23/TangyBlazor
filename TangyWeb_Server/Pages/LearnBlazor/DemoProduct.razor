@page "/learnblazor/demoproduct"

<h2 class="text-primary">Demo Product</h2>
<p>Favorites: @FavoritesCount</p>
<p>Last Selected: @LastSelected</p>

<div class="row border p-2" style="background-color: rgb(228, 246, 248);">
    @foreach (var product in Products)
    {
        <_IndividualProduct Product="@product" OnFavoriteSelected="FavoriteCountUpdate" OnSelection="LastSelectedUpdate">
            <FirstFragment>#1</FirstFragment>
            <SecondFragment>#2</SecondFragment>
        </_IndividualProduct>
    }
</div>

@code {
    List<Demo_Product> Products = new List<Demo_Product>();
    private int FavoritesCount { get; set; } = 0;
    private string LastSelected { get; set; }

    protected override void OnInitialized()
    {
        Products.Add(new Demo_Product()
            {
                ID = 1,
                Name = "Midnight Blaze",
                Price = 10.99,
                IsActive = false,
                ProductProperties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp { ID = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { ID = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { ID = 3, Key = "Color", Value = "Purple" }
                }
            });

        Products.Add(new Demo_Product()
            {
                ID = 2,
                Name = "Blossom Lily",
                Price = 13.99,
                IsActive = true,
                ProductProperties = new List<Demo_ProductProp>()
                {
                    new Demo_ProductProp { ID = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { ID = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { ID = 3, Key = "Color", Value = "White" }
                }
            });
    }

    protected void FavoriteCountUpdate(bool isAddedToFavorites)
    {
        if (isAddedToFavorites)
        {
            FavoritesCount++;
        }
        else
        {
            FavoritesCount--;
        }
    }

    protected void LastSelectedUpdate(string lastSelected)
    {
        LastSelected = lastSelected;
    }
}