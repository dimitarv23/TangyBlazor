@page "/learnblazor/blazorjs"

@inject IJSRuntime _JSRuntime

<h3>Blazor JS</h3>

<div class="row">
    <div class="mt-4 d-flex align-items-center">
        <button class="btn btn-secondary me-3" style="width: 200px;"
                @onclick="TestConfirmBox">
            Test Confirm Box
        </button>

        @if (ConfirmResult)
        {
            <p class="mb-1">Confirmation has been made!</p>
        }
        else
        {
            <p class="mb-1">Confirmation Pending!</p>
        }
    </div>

    <div class="mt-3">
        <button class="btn btn-success me-2" style="width: 200px"
                @onclick="ToastrSuccess">
            Toastr Success
        </button>

        <button class="btn btn-danger" style="width: 200px"
                @onclick="ToastrFailure">
            Toastr Failure
        </button>
    </div>

    <div class="mt-3">
        <button class="btn btn-success me-2" style="width: 200px"
                @onclick="SweetAlertSuccess">
            SweetAlert Success
        </button>

        <button class="btn btn-danger" style="width: 200px"
                @onclick="SweetAlertFailure">
            SweetAlert Failure
        </button>
    </div>
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JSRuntime.ToastrSuccess("Operation was successful!");
    }

    private async Task ToastrFailure()
    {
        await _JSRuntime.ToastrError("Operation failed!");
    }

    private async Task SweetAlertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "success", "Operation was successful!");
    }

    private async Task SweetAlertFailure()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Operation failed!");
    }
}
